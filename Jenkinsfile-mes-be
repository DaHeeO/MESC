    pipeline {
        
    agent any
        stages {
                    
            stage('Prepare') {
                steps {
                    sh 'echo "Clonning Repository"'
                    git branch: 'develop-BE-MES',
                        url: 'https://lab.ssafy.com/s09-final/S09P31S105.git',
                        credentialsId: 'ldy'
                }
                post {
                    success {
                        sh 'echo "Successfully Cloned Repository"'
                    }
                    failure {
                        sh 'echo "Fail Cloned Repository"'
                    }
                }
            }


            stage('Docker stop'){
                steps {
                        sh 'echo "Docker Container Stop"'


                        sh '''
                        result=$( docker container ls -a --filter "name=mes-be*" -q )
                        if [ -n "$result" ]
                        then
                            docker stop $(docker container ls -a --filter "name=mes-be*" -q)
                        else
                            echo "No stop containers"
                        fi
                        '''
			sh 'docker-compose -f docker-compose-mes-be.yml down'
                }
                post {
                    failure {
                        sh 'echo "Docker Fail"'
                    }
                }
            }
                    
stage('RM Docker') {
    steps {
        sh 'echo "Remove Docker"'

        // 정지된 도커 컨테이너 찾아서 컨테이너 ID로 삭제함
        sh '''
            result=$( docker container ls -a --filter "name=mes-be*" -q )
            if [ -n "$result" ]
            then
                docker rm $(docker container ls -a --filter "name=mes-be*" -q)
            else
                echo "No such containers"
            fi
        '''

        // homesketcher로 시작하는 이미지 찾아서 삭제함
        sh '''
            result=$( docker images -f "reference=mes-be*" -q )
            if [ -n "$result" ]
            then
                docker rmi -f $(docker images -f "reference=mes-be*" -q)
            else
                echo "No such container images"
            fi
        '''

        // 안쓰는이미지 -> <none> 태그 이미지 찾아서 삭제함
        sh '''
            result=$(docker images -f "dangling=true" -q)
            if [ -n "$result" ]
            then
                docker rmi -f $(docker images -f "dangling=true" -q)
            else
                echo "No such container images"
            fi
        '''
    }
    post {
        failure {
            sh 'echo "Remove Fail"'
        }
    }
}

                    
            stage('Set Permissions') {
                        steps {
                            // 스크립트 파일에 실행 권한 추가
                            sh 'chmod +x start-mes-be.sh'
			    sh 'chmod +w ./BE/mes/logs'
                        }
                    }
            stage('Execute start-prod.sh Script') {
                steps {
                    // start-mes-be.sh 스크립트 실행
                    sh 'sh start-mes-be.sh'
                }
            }



        }
    }
